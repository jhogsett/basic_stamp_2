'{$STAMP BS2}


spkr con 8

r var byte
s var word
n var byte




n = 2
gosub us_dial
goto skip0

n = 1 
gosub rotary
n = 6
gosub rotary
n = 5
gosub rotary
n = 10
gosub rotary
n = 3
gosub rotary
n = 6
gosub rotary
n = 5
gosub rotary
n = 3
gosub rotary
n = 4
gosub rotary
n = 2
gosub rotary
n = 8
gosub rotary

goto skip1

skip0:
dtmfout spkr,250,150,[1]
pause 300
dtmfout spkr,175,150,[6,5,0]
pause 400
dtmfout spkr,175,150,[3,6,5]
pause 150
dtmfout spkr,175,150,[3,4]
pause 75
dtmfout spkr,175,150,[2,8]

skip1:
pause 500
gosub kerchunk
pause 1800
'gosub call_card
'pause 2000
n = 8
gosub us_busy
'gosub us_ring
'gosub us_error
'gosub us_reorder
end



us_dial:
s = n * 1000
freqout spkr,s,350,440
return

uk_dial:
s = n * 1000
freqout spkr,s,350
return


us_ring:
for r = 1 to n
	freqout spkr,2000,440,480
	pause 4000
next
return

uk_ring:
for r = 1 to n
	freqout spkr,400,400,450
	pause 200
	freqout spkr,400,400,450
	pause 2000
next
return

us_busy:
for r = 1 to n
	freqout spkr,500,480,620
	pause 500
next
return

us_reorder:
for r = 1 to n
	freqout spkr,300,480,620
	pause 200
next
return

us_error:
freqout spkr,274,914
freqout spkr,274,1371
'freqout spkr,380,1371
freqout spkr,380,1777
return

call_card:
freqout spkr,60,941,1477
freqout spkr,940,350,440 ' needs to be able to decay
return

kerchunk:
'pulsout spkr,40
'pause 60
'pulsout spkr,40
'pause 50
pulsout spkr,30000
pause 50
return

'rotary 10 pulses per second, break/make 60/40, 300ms between digits
rotary:
for r = 1 to n
	pulsout spkr,30000
	pause 40
next
pause 560
return
