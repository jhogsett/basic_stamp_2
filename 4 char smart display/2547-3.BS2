' pins

dataio 		var OUTH
dataio_dir 	var DIRH

addr 		var OUTA
addr_dir 	var DIRA

_wr 		var OUT4
_wr_dir		var DIR4
_wr_pin		con 4


' write_char function parms
char		var byte
digit		var nib
blink		var bit

' write_word function parms
wordptr		var word	' pointer to 4-char text 

' write_str function parms
strptr		var word	' pointer to string
scroll_delay	var word	' delay between scrolls in ms


' general workspace
i		var word
j		var word
ix		var word


' text strings
'word1 		data "   Jerry Hogsett N6CCM San Carlos, California 415-593-6382 November 4, 1995.   ",0,0,0,0

word1 data "    Hi!    "
word2 data "/\/\/\/\/\/\/\/\/\/\/\/\    "
word3 data "This circuit demonstrates how simple it is to display messages with the Basic Stamp II and a Siemens MPD2547E.   "
word4 data "The Basic Stamp II is a 20MHz RISC processor: the PIC controller.   "
word5 data "It has 16 general-purpose I/O lines, 16 words of memory, and a 2K EEPROM with room for 600-800 lines of BASIC code.   "
word6 data "Push the Black Button to reset the Basic Stamp II and start the messages over again.   "
word7 data "Now is the time for all good men to come to the aid of their country.    "
word8 data "The Quick Brown Fox Jumped Over The Lazy Dog.    "
word9 data "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()`~-_=+[{]}\|;:'/?.>,<    "
word10 data "This demonstration circuit was created November 4, 1995 by Jerry Hogsett, San Carlos, California.  (415)-593-6382   http://www.hogsett.com"
word11 data 0,0,0,0


'init

init:

dataio = 0
addr = 0
_wr = 1
dataio_dir = %11111111
addr_dir = %0111
_wr_dir = %1

gosub disp_on

'addr = %0000
'dataio = %00010111
'pulsout _wr_pin,1

blink = 0

loop:

gosub disp_on

strptr = Word1
scroll_delay = 125
gosub write_str
goto loop




'=============================
' functions
'=============================


' scroll a string to the display
write_str:

	j = 0

write_str_loop:

	read strptr+j,char
	if char = 0 then write_str_done

	wordptr = strptr+j
	gosub write_word
	pause scroll_delay
	j = j + 1
	goto write_str_loop
	
write_str_done:
	return



' put a 4-character string to the display
write_word:

	for i = 0 to 3
		read wordptr + i,char
		digit = 3 - i
		gosub write_char
	next 
	return



' set char & digit
write_char:
	addr = (digit & %0011) | %0100
	dataio = (char & %01111111) | (blink << 7)
	gosub set_data
	return


' turn off the display
disp_off:
	addr = %0000
	dataio = %10000000
	gosub set_data
	return

' turn on the display (plus blink attribute & 100%)
disp_on:
	addr = %0000
	dataio = %00010111
	gosub set_data
	return

' turn on the display at 50%
disp_50:
	addr = %0000
	dataio = %00010110
	gosub set_data
	return

' turn on the display at 25%
disp_25:
	addr = %0000
	dataio = %00010101
	gosub set_data
	return

' set data by pulsing write line
set_data:
	pulsout _wr_pin,1
	return

