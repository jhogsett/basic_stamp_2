'{$STAMP BS2px, circleanim1.bpx}
' {$PBASIC 2.5}

' bouncing ball

' pin mappings
addr   VAR   OUTC
enable  VAR  OUT12
rdata  VAR  OUT0
gdata  VAR  OUT1
rgdata  VAR  OUTA
clock  VAR  OUT4
clockpin CON 4
latch  VAR  OUT5
latchpin CON 5
'color  VAR  Nib
'ctest  VAR  Nib

' set directions
DIRS = %0001111100110011
OUTS = %1111111111111111

'STORE 0
'DATA Word %1110101011101010
'DATA Word %1000101010001100
'DATA Word %1110101010001000
'DATA Word %1000101010001100
'DATA Word %1000111011101010
'DATA Word %0010101110101000
'DATA Word %0001001010101000
'DATA Word %0001001010101000
'DATA Word %0001001010101000
'DATA Word %0001001110111000
'DATA Word %0000000000000000
'DATA Word %1110111011101010
'DATA Word %0100100010101100
'DATA Word %0100111011101000
'DATA Word %1100100011001100
'DATA Word %1100111010101010

i VAR Byte
w VAR Word
color VAR Bit
c VAR Word
j VAR Nib
p VAR Word

clock = 0
latch = 0
enable = 0

rgdata = 0

color = 0

i = 0
j = 0
c = 0

main:

STORE 1

'FOR j = 0 TO 15
'  LOOKUP j, [t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf, tg], w
  'p = i * 2
  'IF p > 32 THEN p = p - 32
  READ i << 1, Word w
  'DEBUG BIN w ,CR
  SHIFTOUT color, clockpin, 1, [w \ 16]
  enable = 1
  PULSOUT latchpin, 1
  addr = i
  enable = 0
'NEXT

  i = i + 1

  color = i.BIT6

  IF i = 128 THEN
    i = 0
    'color = color + 1
  ENDIF

  'IF i = 0 THEN j = j + 1

'  IF i // 16 = 0 THEN PAUSE 100

GOTO main